{"ast":null,"code":"var _jsxFileName = \"/home/cogent/Desktop/React_crash/contact-app/contact/src/Context/ContactProvider.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useReducer } from 'react';\nimport axios from 'axios';\nimport { CREATE_CONTACT, GET_CONTACT, UPDATE_CONTACT, DELETE_CONTACT, SET_CONTACT, LOAD_CONTACT } from './Constant';\nimport ContactList from '../Components/ContactList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const contactContext = /*#__PURE__*/createContext(); // Reducer\n\nconst contactReducer = (state, action) => {\n  switch (action.type) {\n    case GET_CONTACT:\n      return { ...state,\n        ContactList: action.payload\n      };\n\n    case CREATE_CONTACT:\n      return { ...state,\n        ContactList: [action.payload, ...state.ContactList]\n      };\n\n    case DELETE_CONTACT:\n      return { ...state,\n        ContactList: state.ContactList.filter(contacts => contacts.id !== action.payload)\n      };\n\n    case SET_CONTACT:\n      return { ...state,\n        currentContact: action.payload\n      };\n\n    case UPDATE_CONTACT:\n      return { ...state,\n        ContactList: state.ContactList.map(list => list.id === action.payload.id ? action.payload : list)\n      };\n\n    default:\n      return state;\n  }\n\n  ;\n};\n\nconst ContactProvider = props => {\n  _s();\n\n  const InitialState = {\n    ContactList: [],\n    currentContact: null\n  };\n  const [state, dispatch] = useReducer(contactReducer, InitialState); //Actions\n\n  const createContact = contact => {\n    dispatch({\n      type: CREATE_CONTACT,\n      payload: contact\n    });\n  };\n\n  const deleteContact = id => {\n    dispatch({\n      type: DELETE_CONTACT,\n      payload: id\n    });\n  };\n\n  const setContact = contact => {\n    dispatch({\n      type: SET_CONTACT,\n      payload: contact\n    });\n  };\n\n  const updateContact = contact => {\n    dispatch({\n      type: UPDATE_CONTACT,\n      payload: contact\n    });\n  };\n\n  const getContact = async () => {\n    try {\n      const res = await axios.get(\"http://localhost:3001/ContactList\");\n      ContactList(res.data);\n      dispatch({\n        type: GET_CONTACT,\n        payload: res.data\n      });\n    } catch (error) {\n      console.log(\"ERROR\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(contactContext.Provider, {\n    value: {\n      contactList: state.contactList,\n      currentContact: state.currentContact,\n      createContact,\n      deleteContact,\n      setContact,\n      updateContact,\n      getContact\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ContactProvider, \"7n4dcGW1Y5Sm00B10MMxIjQeQAs=\");\n\n_c = ContactProvider;\nexport default ContactProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactProvider\");","map":{"version":3,"sources":["/home/cogent/Desktop/React_crash/contact-app/contact/src/Context/ContactProvider.js"],"names":["createContext","useReducer","axios","CREATE_CONTACT","GET_CONTACT","UPDATE_CONTACT","DELETE_CONTACT","SET_CONTACT","LOAD_CONTACT","ContactList","contactContext","contactReducer","state","action","type","payload","filter","contacts","id","currentContact","map","list","ContactProvider","props","InitialState","dispatch","createContact","contact","deleteContact","setContact","updateContact","getContact","res","get","data","error","console","log","contactList","children"],"mappings":"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","sourcesContent":["import {createContext, useReducer} from 'react'\nimport axios from 'axios'\nimport {\n        CREATE_CONTACT,\n        GET_CONTACT,\n        UPDATE_CONTACT,\n        DELETE_CONTACT,\n        SET_CONTACT,\n        LOAD_CONTACT\n       } from './Constant'\nimport ContactList from '../Components/ContactList';\n\nexport const contactContext = createContext();\n\n// Reducer\nconst contactReducer= (state,action)=>{\n    switch(action.type){\n        case GET_CONTACT:\n            return{\n             ...state,\n             ContactList : action.payload\n            };\n        case CREATE_CONTACT:\n           return{\n             ...state,\n             ContactList:[action.payload, ...state.ContactList]\n           };\n        case DELETE_CONTACT:\n            return{\n                ...state,\n                ContactList: state.ContactList.filter(contacts=>contacts.id !== action.payload)\n            };\n        case SET_CONTACT:\n            return{\n                ...state,\n                currentContact:action.payload\n            }\n        case UPDATE_CONTACT:\n            return{\n                ...state,\n                ContactList: state.ContactList.map(\n                    (list)=>list.id=== action.payload.id ? action.payload : list )\n            }\n        \n        default: \n           return state\n    };\n};\n\nconst ContactProvider = props =>{\n     const InitialState={\n         ContactList :[],\n         currentContact: null,\n     };\n\n     const [state,dispatch]= useReducer(contactReducer,InitialState);\n\n  //Actions\n     const createContact= contact =>{\n         dispatch({\n             type: CREATE_CONTACT,\n             payload: contact\n         })\n     };\n\n     const deleteContact = id =>{\n         dispatch({\n             type: DELETE_CONTACT,\n             payload: id\n         })\n     };\n\n     const setContact = contact =>{\n         dispatch({\n             type: SET_CONTACT,\n             payload:contact\n         })\n     }\n\n     const updateContact = contact =>{\n         dispatch({\n             type : UPDATE_CONTACT,\n             payload: contact\n         })   \n\n     }\n\n    const  getContact = async ()=> {\n       try {\n           const res = await axios.get(\"http://localhost:3001/ContactList\");\n          ContactList(res.data)\n           dispatch({\n            type : GET_CONTACT,\n            payload: res.data\n           \n        });\n       \n       } catch (error) {\n           console.log(\"ERROR\")\n       }\n      \n        \n\n    }\n\n     return(\n         <contactContext.Provider value={{\n            contactList : state.contactList,\n             currentContact: state.currentContact,\n             createContact,\n             deleteContact,setContact, updateContact,getContact\n           \n         }}>\n             {props.children}\n         </contactContext.Provider>\n     )\n};\n\nexport default ContactProvider;"]},"metadata":{},"sourceType":"module"}